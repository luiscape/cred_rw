as.character(as.Date('2014-07-16') - (i - 1)),
""
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Israel',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
""
)
}
View(x)
for (i in 1:nrow(x)) {
x$date[i] <- ifelse(
x$variable[i] == 'Targets Struck by Israel',
as.character(as.Date('2014-07-16') - (i - 1))
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Gaza',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1))
)
x$date[i] <- ifelse(
x$variable[i] == 'Rockets Launched from Gaza',
as.character(as.Date('2014-07-16') - (i - 1))
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Israel',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1))
)
}
for (i in 1:nrow(x)) {
x$date[i] <- ifelse(
x$variable[i] == 'Targets Struck by Israel',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Gaza',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Rockets Launched from Gaza',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Israel',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
}
View(x)
x[17:nrow(x),]
nrow(x[17:nrow(x),])
nrow(x) - 32
for (i in 1:((nrow(x) - 32) / 2)) {
x$date[i] <- ifelse(
x$variable[i] == 'Targets Struck by Israel',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Gaza',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Rockets Launched from Gaza',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Israel',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
}
VieW(x)
View(x)
x$date <- NA  # creating the dates columns
for (i in 1:((nrow(x) - 32) / 2)) {
x$date[i] <- ifelse(
x$variable[i] == 'Targets Struck by Israel',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Gaza',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Rockets Launched from Gaza',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Israel',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
}
View(x)
View(x)
r <- i + 2
x$date[i] <- ifelse(
x$variable[i] == 'Targets Struck by Israel',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Gaza',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Rockets Launched from Gaza',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Israel',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
}
for (i in 1:((nrow(x) - 32) / 2)) {
r <- i + 2
x$date[i] <- ifelse(
x$variable[i] == 'Targets Struck by Israel',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Gaza',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Rockets Launched from Gaza',
as.character(as.Date('2014-07-16') - (i - 1)),
x$date[i]
)
x$date[i] <- ifelse(
x$variable[i] == 'Deaths in Israel',
as.character(as.Date(Sys.time(), tz = 'EST') - (i - 1)),
x$date[i]
)
}
View9x
View(x)
?plyr
library(plyr)
library(plyr)
?plyr
VieW(x)
View(x)
y <- ddply(x, variable, as.Date(Sys.time())
)
View(y)
y <- ddply(x, .(variable), as.Date(Sys.time())
)
y <- ddply(x, .(variable), as.Date)
download.file('http://manage.hdx.rwlabs.org/hdx/api/exporter/indicator/csv/CH070/source/emdat/fromYear/1950/toYear/2014/language/en/CH070_Baseline.csv', destfile = 'data/source/CH070_Baseline.csv', method = 'curl')
setwd("~/Documents/Programming/cred_rw")
download.file('http://manage.hdx.rwlabs.org/hdx/api/exporter/indicator/csv/CH070/source/emdat/fromYear/1950/toYear/2014/language/en/CH070_Baseline.csv', destfile = 'data/source/CH070_Baseline.csv', method = 'curl')
download.file('http://manage.hdx.rwlabs.org/hdx/api/exporter/indicator/csv/RW002/source/RW/fromYear/1950/toYear/2014/language/en/RW002_RW.csv', destfile = 'data/source/RW002_RW.csv', method = 'curl')
cred <- read.csv('data/source/CH070_Baseline.csv')
rw <- read.csv('data/source/RW002_RW.csv')
View(cred)
library(ggplot2)
library(reshape2)  # to melt data out of the current format
cred_molten <- melt(cred)
View(cred)
View(cred_molten)
rw_molten <- melt(rw)
names(cred_molten) <- c('iso3', 'name', 'period', 'value')
names(rw_molten) <- c('iso3', 'name', 'period', 'value')
View(rw_molten)
x <- sub("X", "",rw_molten)
View(x)
x <- sub("X", "", rw_molten$period)
View(x)
rw_molten$period <- sub("X", "", rw_molten$period)
View(rw_molten)
cred_molten$period <- sub("X", "", cred_molten$period)
View(cred_molten)
summary(cred_molten$iso3 == 'WLD')
summary(rw_molten$iso3 == 'WLD')
rw_molten$source <- 'rw'
cred_molten$source <- 'cred'
View(cred_molten)
data <- rbind(rw_molten, cred_molten)
View(data)
write.csv(data, 'data/data.csv', row.names = F)
data <- read.csv('data/data.csv')
View(data)
names(data)
ggplot(data, aes(period, value, group = iso3)) + theme_bw() +
geom_line(stat = 'identity', size = 1, color = "#F1645A") +
facet_wrap(~ region, scale = 'free_y') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggplot(data, aes(period, value, group = iso3)) + theme_bw() +
geom_line(stat = 'identity', size = 1, color = "#F1645A") +
facet_wrap(~ iso3, scale = 'free_y') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
# creating sparklines
ggplot(data, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_wrap(~ iso3, scale = 'free_y') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggplot(data, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_wrap(~ iso3, scale = 'free') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
# creating sparklines
spark_plot <- ggplot(data, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_wrap(~ iso3, scale = 'free') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggsave(plot = spark_plot, destfile = 'plot/spark_plot.png', heigh = 16.39, width = , 10)
?ggsave
ggsave(plot = spark_plot, filename = 'plot/spark_plot.png', heigh = 16.39, width = , 10)
# creating sparklines
spark_plot <- ggplot(data, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = .7) +
facet_wrap(~ iso3, scale = 'free') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggsave(plot = spark_plot, filename = 'plot/spark_plot.png', heigh = 16.39, width = , 10)
ggsave('plot/spark_plot.png', spark_plot, heigh = 16.39, width = 10, units = 'in')
ggsave('plot/spark_plot.png', spark_plot, heigh = 10.5, width = 16.39, units = 'in')
# creating sparklines
spark_plot <- ggplot(data, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_wrap(~ iso3, scale = 'free') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggsave('plot/spark_plot.png', spark_plot, heigh = 10.5, width = 16.39, units = 'in')
lapply(data, data$source, sum)
?sum
sapply(data, data$source, sum)
?lapply
tapply(data, data$source, sum)
rw_total <- data[data$source == 'rw', ]
View(rw_total)
length(unique(rw_total$period))
unique(rw_total$period)
year_list <- unique(rw_total$period)
year_list[1]
it <- rw_total[rw_total$period == year_list[1], ]
View(it)
names(it)
sum(it$value)
x <- rw_total
for (i in 1:length(unique(rw_total$period))) {
it <- rw_total[rw_total$period == year_list[i], ]
total <- data.frame(iso3 = 'WLD',
name = 'World',
period = year_list[i],
value = sum(it$value),
source = 'rw',
)
rw_total <- rbind(rw_total, total)
}
total <- data.frame(iso3 = 'WLD',
name = 'World',
period = year_list[1],
value = sum(it$value),
source = 'rw',
)
sum(it$value)
for (i in 1:length(unique(rw_total$period))) {
it <- rw_total[rw_total$period == year_list[i], ]
total <- data.frame(iso3 = 'WLD',
name = 'World',
period = year_list[1],
value = sum(it$value),
src = 'rw',
)
rw_total <- rbind(rw_total, total)
}
value = sum(it$value)
period = year_list[1]
period
valule
value
source = 'rw'
source
name = 'World'
iso3 = 'WLD'
for (i in 1:length(unique(rw_total$period))) {
it <- rw_total[rw_total$period == year_list[i], ]
total <- data.frame(iso3 = 'WLD',
name = 'World',
period = year_list[1],
value = sum(it$value),
source = 'rw'
)
rw_total <- rbind(rw_total, total)
}
View(rw_total)
y <- rw_total[rw_total$region == 'WLD', ]
View(y)
y <- rw_total[rw_total$iso3 == 'WLD', ]
View(y)
rw_total <- x
View(rw_total)
for (i in 1:length(unique(rw_total$period))) {
it <- rw_total[rw_total$period == year_list[i], ]
total <- data.frame(iso3 = 'WLD',
name = 'World',
period = year_list[i],
value = sum(it$value),
source = 'rw'
)
rw_total <- rbind(rw_total, total)
}
y <- rw_total[rw_total$iso3 == 'WLD', ]
VieW(y)
View(y)
cred_total <- data[data$source == 'cred', ]
x <- cred_total
year_list <- unique(cred_total$period)
year_list <- unique(cred_total$period)
for (i in 1:length(unique(cred_total$period))) {
it <- cred_total[cred_total$period == year_list[i], ]
total <- data.frame(iso3 = 'WLD',
name = 'World',
period = year_list[i],
value = sum(it$value),
source = 'rw'
)
cred_total <- rbind(cred_total, total)
}
y <- cred_total[cred_total$iso3 == 'WLD', ]
View(cred_total)
View(y)
?sum
cred_total <- x
View(cred_total)
year_list <- unique(cred_total$period)
for (i in 1:length(unique(cred_total$period))) {
it <- cred_total[cred_total$period == year_list[i], ]
total <- data.frame(iso3 = 'WLD',
name = 'World',
period = year_list[i],
value = sum(it$value, na.rm = T),
source = 'cred'
)
cred_total <- rbind(cred_total, total)
}
y <- cred_total[cred_total$iso3 == 'WLD', ]
View(y)
data_total <- rbind(rw_total, cred_total)
View(data_total)
nrow(data)
nrow(data_total)
world <- data_total[data_total$iso3 == 'WLD', ]
world <- data_total[data_total$iso3 == 'WLD', ]
View(world)
ggplot(world, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_wrap(~ source, scale = 'free') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggplot(world, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_wrap(~ source, scale = 'free_y') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggplot(world, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
#     facet_wrap(~ source, scale = 'free_y') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggplot(world, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_wrap(~ source, scale = 'free_y') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggplot(world, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_grid(~ source, scale = 'free_y') +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggplot(world, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_grid(~ source) +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
ylab("") + xlab("")
ggplot(world, aes(period, value, group = iso3, color = source)) + theme_bw() +
geom_line(stat = 'identity', size = 1) +
facet_grid(~ source) +
theme(panel.border = element_rect(linetype = 0),
strip.background = element_rect(colour = "white", fill = "white"),
#          strip.text = element_text(angle = 90, size = 10, hjust = 0.5, vjust = 0.5),
panel.background = element_rect(colour = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#           axis.text.x = element_blank(),
#           axis.text.y = element_blank(),
#           axis.ticks = element_blank()) +
ylab("") + xlab("")
